apiVersion: v1
kind: ServiceAccount
metadata:
  name: netwatch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: netwatch-cleanup-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: netwatch-manager-role
rules:
  - apiGroups: [''] # Core API group
    resources: ['users', 'groups', 'serviceaccounts']
    verbs: ['impersonate']
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  # This is required by the client-go/controller-runtime libraries to initialize
  # a client that can then perform impersonation.
  - apiGroups: [''] # The empty string "" targets the core API group discovery endpoints.
    resources: ['']
    verbs: ['get']
  - apiGroups: ['*'] # The "*" targets all other API group discovery endpoints.
    resources: ['']
    verbs: ['get']
  - apiGroups: ['authorization.k8s.io']
    resources: ['subjectaccessreviews']
    verbs: ['create']
  # Permissions for Netwatch's own AccessRequest CRD.
  # The webserver needs full control to manage the request lifecycle.
  - apiGroups: ['netwatch.vtk.io']
    resources: ['accessrequests']
    verbs: ['create', 'get', 'list', 'delete']
  # Permissions to list services from the core API group.
  # Required to populate the service dropdowns in the UI.
  - apiGroups: ['']
    resources: ['services']
    verbs: ['get', 'list']
  - apiGroups: ['']
    resources: ['namespaces']
    verbs: ['get', 'list', 'watch']
  # Permissions to list maxtac Access and ExternalAccess resources.
  # Required for displaying the "Active Access" list and finding revocation pairs.
  - apiGroups: ['maxtac.vtk.io']
    resources: ['accesses', 'externalaccesses']
    verbs: ['list', 'get', 'watch']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: netwatch-cleanup-role
rules:
  # Permissions to manage finalizers on the maxtac resources.
  # The controller needs to get the resource to see the deletion timestamp,
  # and update it to add/remove the finalizer.
  - apiGroups: ['maxtac.vtk.io']
    resources: ['accesses', 'externalaccesses']
    verbs: ['get', 'update', 'list', 'watch']
  # Permissions to list and delete the cloned services.
  # This is the core function of the cleanup controller.
  - apiGroups: ['']
    resources: ['services']
    verbs: ['list', 'delete', 'list', 'watch']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: netwatch-cleanup-role
rules:
  - apiGroups: ['coordination.k8s.io']
    resources: ['leases']
    verbs: ['create', 'get', 'list', 'update']
  - apiGroups: ['']
    resources: ['events']
    verbs: ['create', 'patch']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: netwatch-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: netwatch-manager-role
subjects:
  - kind: ServiceAccount
    name: netwatch
    namespace: netwatch-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: netwatch-cleanup-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: netwatch-cleanup-role
subjects:
  - kind: ServiceAccount
    name: netwatch-cleanup-controller
    namespace: netwatch-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: netwatch-cleanup-rolebinding-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: netwatch-cleanup-role
subjects:
  - kind: ServiceAccount
    name: netwatch-cleanup-controller
    namespace: netwatch-system
